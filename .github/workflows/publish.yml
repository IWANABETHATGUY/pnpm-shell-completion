name: Publish

on: [push]

jobs:
  build:
    # if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
            build: cargo build --release
          - host: macos-latest
            target: aarch64-apple-darwin
            build: |
              sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*;
              export CC=$(xcrun -f clang);
              export CXX=$(xcrun -f clang++);
              SYSROOT=$(xcrun --sdk macosx --show-sdk-path);
              export CFLAGS="-isysroot $SYSROOT -isystem $SYSROOT";
              cargo build --release
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            build: cargo build --release
          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
            build: cargo build --release
    name: ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v3
      - name: Install
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          toolchain: stable
          target: ${{ matrix.settings.target }}
      - name: Build
        run: ${{ matrix.settings.build }}
      - name: Pack
        run: |
          mkdir dist
          cp ./target/release/pnpm-shell-completion dist/
          cp ./pnpm-shell-completion.plugin.zsh dist/
          cp ./install.sh dist/
          cp ./README.md dist/
          cp ./LICENSE dist/
          cd dist
          zip ../pnpm-shell-completion_${{ matrix.settings.target }}.zip ./*
          tar -zcvf ../pnpm-shell-completion_${{ matrix.settings.target }}.tar.gz *
          ls -l
          cd ..
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: bindings-${{ matrix.settings.target }}
          path: |
            pnpm-shell-completion_*.zip
            pnpm-shell-completion_*.tar.gz

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - run: ls ./artifacts
